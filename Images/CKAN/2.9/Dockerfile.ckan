FROM uselagoon/python-3.8:22.10.0

ARG PIP_DISABLE_PIP_VERSION_CHECK=1
ARG PIP_NO_CACHE_DIR=1

RUN apk update \
    && apk upgrade \
    && apk add --no-cache \
    python3-dev \
    git \
    libpq \
    py3-virtualenv \
    postgresql-dev \
    gcc \
    libc-dev \
    libmagic \
    libxslt-dev \
    libxslt \
    libxml2-dev \
    libffi-dev \ 
    patch

RUN mkdir -p /app/ckan/default \
    && mkdir -p /app/ckan/default/src/ \
    && mkdir -p /app/src \
    && fix-permissions /app/ckan/default

RUN python3 -m venv /app/ckan/default \
    && . /app/ckan/default/bin/activate \
    && pip install --upgrade pip

# Set CKAN version to build
ENV GIT_URL=https://github.com/ckan/ckan.git
ENV GIT_BRANCH=ckan-2.9.7

RUN . /app/ckan/default/bin/activate \
	&& cd /app/ckan/default/src/ \
	&& pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan --config-settings editable_mode=strict \
	&& pip install -r /app/ckan/default/src/ckan/requirement-setuptools.txt \
    && pip install -r /app/ckan/default/src/ckan/requirements.txt \
	&& ln -s /app/ckan/default/src/ckan/who.ini /app/ckan/default/who.ini \
	&& deactivate


ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
COPY patches /app/patches

RUN for d in /app/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd /app/ckan/default/src/`basename "$d"` && echo "$0: Applying patch $f to /app/ckan/default/src/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done

CMD ["/bin/docker-sleep"]